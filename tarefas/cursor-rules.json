{
    "rules": [
        {
            "name": "comunicacao-em-portugues",
            "glob": "**/*",
            "text": "Todas as mensagens, respostas e explicações devem ser redigidas em português do Brasil. Utilize termos técnicos em português quando existirem equivalentes adequados, mantendo terminologia técnica em inglês apenas quando for padrão na indústria. Adapte expressões para o contexto brasileiro quando relevante e preserve a formalidade adequada ao contexto técnico, mas mantendo linguagem acessível."
        },
        {
            "name": "regra-estrutura-atual-projeto",
            "glob": "**/*.c,**/*.h,**/CMakeLists.txt,**/README.md",
            "text": "O projeto segue uma organização estruturada com: src/ contendo main.c; include/ com módulos galton.c/h e ssd1306_i2c.c/h; assets/ com recursos; docs/ com documentação; e arquivos de raiz como CMakeLists.txt, README.md e LICENSE (GPL-3.0). O código principal está em main.c, que se comunica com os módulos através de includes relativos. Ao desenvolver, mantenha a separação de responsabilidades, adicione recursos nos diretórios apropriados e mantenha a documentação atualizada."
        },
        {
            "name": "instrucoes-compilacao",
            "glob": "**/CMakeLists.txt,**/*.c,**/*.h",
            "text": "Para compilar projetos para Raspberry Pi Pico/Pico W, siga os passos: 1) Pico SDK instalado, 2) CMake instalado, 3) NMake disponível, 4) GCC ARM instalado. Execute: limpe/crie pasta build, configure com CMake, compile com NMake. Use script batch para evitar erros de caminho. Transfira o .uf2 gerado para o dispositivo com o Pico em modo BOOTSEL."
        },
        {
            "name": "regra-compilacao-terminal",
            "glob": "**/build/**",
            "text": "Regras para implantação pós-compilação de projetos Raspberry Pi Pico via terminal, incluindo navegação ao diretório build, a ser usada apenas quando solicitada explicitamente."
        },
        {
            "name": "regra-picotool-reboot-without-env",
            "glob": "**/*",
            "text": "Regra para reboot da Raspberry Pi Pico usando picotool via terminal sem variáveis de ambiente. Comando: & \"C:\\Users\\Jorge Wilker Tech\\.pico-sdk\\picotool\\2.1.1\\picotool\\picotool.exe\" reboot -f -u. Essa regra só deve ser acionada se o usuário solicitar."
        },
        {
            "name": "regra-picotool-reboot-with-env",
            "glob": "**/*",
            "text": "Regra para reboot da Raspberry Pi Pico usando picotool via terminal com variáveis de ambiente habilitadas. Comando: picotool reboot -f -u"
        },
        {
            "name": "compilacao-pico-sem-wireless",
            "glob": "**/CMakeLists.txt",
            "text": "O CMakeLists.txt atual já está configurado para permitir compilação com ou sem componentes wireless. Utilize a opção ENABLE_WIRELESS e PICO_BOARD para controlar o comportamento: para compilar com wireless use 'cmake -DENABLE_WIRELESS=ON -DPICO_BOARD=pico_w ..', para versão sem wireless use simplesmente 'cmake ..'. Cuidado com caminhos contendo espaços e use scripts batch para automatizar a compilação quando necessário."
        },
        {
            "name": "conclusao-projeto",
            "glob": "**/*",
            "text": "Orientações para finalização do projeto: 1) Atualizar .gitignore com padrões para ignorar arquivos de compilação e temporários; 2) Padronizar comentários em arquivos principais usando formato consistente e em português; 3) Garantir que todos os arquivos sigam as convenções de estilo estabelecidas."
        },
        {
            "name": "regra-licenca-gpl3",
            "glob": "**/*",
            "text": "Este projeto é licenciado sob GNU General Public License v3.0 (GPL-3.0), que garante liberdades para compartilhar e modificar o software, assegurando que ele permaneça software livre. A licença requer que trabalhos derivados também sejam distribuídos sob os mesmos termos, e que o código-fonte seja disponibilizado. Esta licença deve ser mencionada em todos os arquivos de código com o aviso de copyright apropriado."
        },
        {
            "name": "regra-formatação-conversão",
            "glob": "**/*.md",
            "text": "Regra para formatação e conversão de documentos Markdown para DOCX. Utilize o formato Markdown para escrever e o formato DOCX para exibir. Adicione links para os arquivos de referência sempre que possível."
        },
        {
            "name": "regra-incluir-licenca-gpl3",
            "glob": "**/*",
            "text": "Inclua o texto completo da licença GPL-3.0 diretamente nos arquivos, evitando downloads da internet."
        },
        {
            "name": "regra-deteccao-arquivos-irrelevantes",
            "glob": "**/*",
            "text": "Procedimento para identificar arquivos potencialmente irrelevantes no projeto: detectar arquivos sem relação direta com a estrutura do projeto, arquivos temporários (*.tmp, *.bak, *.swp), caches de IDEs (.vscode, .idea), saídas de compilação não incluídas no .gitignore, e arquivos fora do contexto tecnológico do projeto. Analisar a raiz e subpastas, respeitar as exceções (.gitignore, README, etc.) e solicitar ao usuário confirmação antes de qualquer remoção."
        }
    ]
}